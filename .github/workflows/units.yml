name: units-grabber
run-name: ${{ github.workflow }} âœ… ${{ github.event_name}}
on:
  workflow_call:
      outputs:
       units_outcome:
        description: "jobs.push.outputs.output_units"
        value: ${{ jobs.push.outputs.output_units }}
  workflow_dispatch:


jobs:
  grab:
    runs-on: ubuntu-latest
    timeout-minutes: 80
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
           - unit: unit1
           - unit: unit2
    defaults:
      run:
        working-directory: ./epg-grabber


    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: NpmInstall
        id: NpmInstall
        run: npm install

      - name: Grab
        if: steps.NpmInstall.outcome == 'success'
        id: grab_unit
        working-directory: ./epg-grabber
        run: |
         npm run ${{ matrix.unit }}
         scale=$(sed -n '$=' ./guide/${{ matrix.unit }}.guide.xml)
         echo ${{ matrix.unit }} - $scale

      - uses: actions/upload-artifact@v4
        id: upload
        if: steps.grab_unit.outcome == 'success'
        with:
          name: units_${{ matrix.unit }}
          if-no-files-found: error
          path: |
           ${{ github.workspace }}/epg-grabber/guide/${{ matrix.unit }}.guide.xml
          retention-days: 5

      - name: outcome
        id: unit_outcome
        shell: bash
        run: |
          echo ${{ matrix.unit }} - ${{ steps.grab_unit.outcome }}
          echo ${{ steps.upload.outputs.artifact-id }}
          echo ${{ steps.upload.outputs.artifact-url }}

  push:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [grab]
    outputs:
      output_units: ${{ steps.deploy.outputs.units_outcome}}

    steps:
     # Artifacts download
      # - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        id: download
        with:
         path: ${{ github.workspace }}/epg-grabber/guide/
         merge-multiple: true
         pattern: units_*

      - name: 'download && path && combine'
        working-directory: ./epg-grabber
        id: combine
        run: |
         echo ${{steps.download.outputs.download-path}}
         tree -h ${{steps.download.outputs.download-path}}
         chmod +x ./scripts/combine-xml.sh
         ./scripts/combine-xml.sh
         tree -h ${{steps.download.outputs.download-path}}

      - name: Deploy
        id: deploy
        if: steps.combine.outcome == 'success'
        run: |
          echo "units_outcome=${{ steps.combine.outcome }}" >> $GITHUB_OUTPUT
          git config --global user.email ${{ secrets.EMAIL }}
          git config --global user.name ${{ secrets.NAME }}
          git config pull.rebase false
          echo ${{ steps.combine.outcome }}
          git add ${{steps.download.outputs.download-path}}/units.guide.xml
          git commit -m "units-grabber - ${{ steps.combine.outcome }}"
          git pull
          git push -f